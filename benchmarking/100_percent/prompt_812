You are a competitive programmer solving a Project Euler problem, which is provided in HTML format at the end of the prompt. Write a Python script that computes the requested value correctly and efficiently.

Requirements:

- Print the final answer clearly
- Avoid brute force - assume naive approaches will timeout/exhaust memory
- Use mathematical insights, optimizations, and efficient algorithms
- Include a brief explanation: plain-English summary, then key math/coding techniques

Constraints:

- 5-minute timeout on 12th Gen Intel i7-1270P (2.20 GHz), 16GB RAM, Python 3.13
- Standard library only
- If code doesn't run to completion within timeout, I'll abort and let you know

The problem:

<p>A <dfn>dynamical polynomial</dfn> is a <strong class="tooltip">monic<span class="tooltiptext">leading coefficient is $1$</span></strong> polynomial $f(x)$ with integer coefficients such that $f(x)$ divides $f(x^2-2)$.</p>

<p>For example, $f(x) = x^2 - x - 2$ is a dynamical polynomial because $f(x^2-2) = x^4-5x^2+4 = (x^2 + x -2)f(x)$.</p>

<p>Let $S(n)$ be the number of dynamical polynomials of degree $n$.<br>
For example, $S(2)=6$, as there are six dynamical polynomials of degree $2$:</p>
$$ x^2-4x+4 \quad,\quad x^2-x-2 \quad,\quad x^2-4 \quad,\quad x^2-1 \quad,\quad x^2+x-1 \quad,\quad x^2+2x+1 $$
<p>Also, $S(5)=58$ and $S(20)=122087$.</p>

<p>Find $S(10\,000)$. Give your answer modulo $998244353$.</p>
