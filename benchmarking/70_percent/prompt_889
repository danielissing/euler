You are a competitive programmer solving a Project Euler problem, which is provided in HTML format at the end of the prompt. Write a Python script that computes the requested value correctly and efficiently.

Requirements:

- Print the final answer clearly
- Avoid brute force - assume naive approaches will timeout/exhaust memory
- Use mathematical insights, optimizations, and efficient algorithms
- Include a brief explanation: plain-English summary, then key math/coding techniques

Constraints:

- 5-minute timeout on 12th Gen Intel i7-1270P (2.20 GHz), 16GB RAM, Python 3.13
- Standard library only
- If code doesn't run to completion within timeout, I'll abort and let you know

The problem:

<p>
Recall the blancmange function from <a href="problem=226">Problem 226</a>: $T(x) = \sum\limits_{n = 0}^\infty\dfrac{s(2^nx)}{2^n}$, where $s(x)$ is the distance from $x$ to the nearest integer.</p>

<p>
For positive integers $k, t, r$, we write $$F(k, t, r) = (2^{2k} - 1)T\left(\frac{(2^t + 1)^r}{2^k + 1}\right).$$ It can be shown that $F(k, t, r)$ is always an integer.<br>
For example, $F(3, 1, 1) = 42$, $F(13, 3, 3) = 23093880$ and $F(103, 13, 6) \equiv 878922518\pmod {1\,000\,062\,031}$.</p>

<p>
Find $F(10^{18} + 31, 10^{14} + 31, 62)$. Give your answer modulo $1\,000\,062\,031$.</p>

